{"timestamp":"2025-06-10T16:12:36.493251","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-10T16:12:36.493566","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/sql_queries_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-10T16:12:36.506323Z","level":"info","event":"‚úÖ PostgresHook imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:36.510456Z","level":"info","event":"‚úÖ PostgresOperator imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:36.512564Z","level":"info","event":"‚úÖ PostgreSQL provider fully available","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:36.535044Z","level":"info","event":"‚úÖ Recreated environment variable: AIRFLOW_CONN_SUPABASE_POSTGRES","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:36.535177Z","level":"info","event":"‚úÖ Using connection URI from setup task","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:36.535248Z","level":"info","event":"üîç Executing 3 SQL queries...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:36.535326Z","level":"info","event":"üìã Executing query: schema_check","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:36.930182Z","level":"info","event":"‚úÖ Query 'schema_check' returned 1 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:36.930687Z","level":"info","event":"  Result: (13,)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:36.930891Z","level":"info","event":"üìã Executing query: articles_count","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:37.349473Z","level":"info","event":"‚úÖ Query 'articles_count' returned 1 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:37.349813Z","level":"info","event":"  Result: (22,)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:37.350002Z","level":"info","event":"üìã Executing query: insert_test_article","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:37.716704Z","level":"info","event":"‚úÖ Query 'insert_test_article' executed successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:37.719766Z","level":"info","event":"‚úÖ SQL query execution completed. Results stored in XCom.","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:12:37.716845","level":"info","event":"Done. Returned value was: {'schema_check': [(13,)], 'articles_count': [(22,)], 'insert_test_article': 'executed_successfully'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-10T16:12:37.717134","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01975a9d-616d-7fec-a7bb-203ec1231e26'), task_id='execute_sql_queries', dag_id='sql_queries_pipeline', run_id='manual__2025-06-10T17:06:48.083001+01:00', try_number=2, map_index=-1, hostname='aa05a188031b', context_carrier=None, task=<Task(PythonOperator): execute_sql_queries>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=2, start_date=datetime.datetime(2025, 6, 10, 16, 12, 36, 444379, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
