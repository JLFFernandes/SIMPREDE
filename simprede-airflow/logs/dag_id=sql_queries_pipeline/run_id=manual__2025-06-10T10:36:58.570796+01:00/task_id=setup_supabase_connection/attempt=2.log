{"timestamp":"2025-06-10T09:51:56.332716","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-10T09:51:56.333055","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/sql_queries_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-10T09:51:56.345300Z","level":"info","event":"‚úÖ PostgresHook imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.349199Z","level":"info","event":"‚úÖ PostgresOperator imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.349325Z","level":"info","event":"‚úÖ PostgreSQL provider fully available","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.363318Z","level":"info","event":"üîß Setting up Supabase connection...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.363443Z","level":"info","event":"üîç Environment variables status:","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.363534Z","level":"info","event":"  - DB_USER: ‚úÖ Set","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.363617Z","level":"info","event":"  - DB_PASSWORD: ‚úÖ Set","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.363695Z","level":"info","event":"  - DB_HOST: ‚úÖ Set","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.363780Z","level":"info","event":"  - DB_PORT: 6543","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.363903Z","level":"info","event":"  - DB_NAME: postgres","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.364042Z","level":"info","event":"üîÑ Setting up connection for Airflow 3.0...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.364119Z","level":"info","event":"‚úÖ Set up environment variable for connection: supabase_postgres","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.357732","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-10T09:51:56.358160","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-06-10T09:51:56.358401","level":"info","event":"Connection Retrieved 'supabase_postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-10T09:51:56.358439","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-06-10T09:51:56.727052","level":"info","event":"Running statement: SELECT current_timestamp, current_user, current_database(), parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-06-10T09:51:56.826918","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-06-10T09:51:56.875443Z","level":"info","event":"üîç Connection test successful:","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.875965Z","level":"info","event":"  - Timestamp: 2025-06-10 09:51:56.836276+00:00","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.876205Z","level":"info","event":"  - User: postgres","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.876415Z","level":"info","event":"  - Database: postgres","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.876711Z","level":"info","event":"‚úÖ Supabase connection verified!","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.904913Z","level":"info","event":"üìã Connection setup completed for Airflow 3.0","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.905272Z","level":"info","event":"üí° Connection is now available as environment variable","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.905416Z","level":"info","event":"  AIRFLOW_CONN_SUPABASE_POSTGRES is set","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T09:51:56.876687","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
