{"timestamp":"2025-06-10T14:48:31.649605","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-10T14:48:31.650052","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/sql_queries_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-10T14:48:31.689987Z","level":"info","event":"‚úÖ PostgresHook imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.695096Z","level":"info","event":"‚úÖ PostgresOperator imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.698098Z","level":"info","event":"‚úÖ PostgreSQL provider fully available","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.718683Z","level":"info","event":"üîç Connection status from setup: verified","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.719111Z","level":"info","event":"‚ùå Connection environment variable missing: AIRFLOW_CONN_SUPABASE_POSTGRES","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.719260Z","level":"info","event":"üîß Trying to recreate from setup task data...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.719365Z","level":"info","event":"‚úÖ Recreated environment variable: AIRFLOW_CONN_SUPABASE_POSTGRES","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.719456Z","level":"info","event":"üîç Connection URI length: 125 characters","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.719568Z","level":"info","event":"üîÑ Testing connection with ID: supabase_postgres","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.720036","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-10T14:48:31.720537","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-06-10T14:48:31.720776","level":"info","event":"Connection Retrieved 'supabase_postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-10T14:48:31.720819","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-06-10T14:48:31.720952","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-10T14:48:31.721354Z","level":"info","event":"üîÑ Attempting to establish database connection...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:48:31.721478Z","level":"info","event":"‚úÖ Supabase health check successful - connection is available","chan":"stdout","logger":"task"}
