{"timestamp":"2025-06-10T16:20:28.828421","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-10T16:20:28.829310","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/sql_queries_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-10T16:20:28.871312Z","level":"info","event":"✅ PostgresHook imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:28.877400Z","level":"info","event":"✅ PostgresOperator imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:28.877634Z","level":"info","event":"✅ PostgreSQL provider fully available","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:28.932665Z","level":"info","event":"✅ Recreated environment variable: AIRFLOW_CONN_SUPABASE_POSTGRES","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:28.932861Z","level":"info","event":"🔧 Final coordinate update for eventos table...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.194057Z","level":"info","event":"📋 Step 1: Check current coordinate status","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.273596Z","level":"info","event":"📊 Initial status: 0/253 events have coordinates","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.274012Z","level":"info","event":"📋 Step 2: Verify centroids table","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.313685Z","level":"info","event":"✅ Found 3551 centroids with valid coordinates","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.313904Z","level":"info","event":"📋 Step 3: Updating coordinates","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.395913Z","level":"info","event":"❌ Coordinate update failed: column \"dicofreg\" is of type double precision but expression is of type character varying","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.396521Z","level":"info","event":"LINE 7:                             dicofreg = coord_data.best_dicof...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.396735Z","level":"info","event":"                                               ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.396916Z","level":"info","event":"HINT:  You will need to rewrite or cast the expression.","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.397088Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T16:20:29.396609","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
