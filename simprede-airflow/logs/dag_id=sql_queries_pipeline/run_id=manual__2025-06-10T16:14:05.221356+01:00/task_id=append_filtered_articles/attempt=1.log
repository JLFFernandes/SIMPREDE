{"timestamp":"2025-06-10T15:14:08.863970","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-10T15:14:08.864409","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/sql_queries_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-10T15:14:08.891186Z","level":"info","event":"âœ… PostgresHook imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T15:14:08.895101Z","level":"info","event":"âœ… PostgresOperator imported successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T15:14:08.895220Z","level":"info","event":"âœ… PostgreSQL provider fully available","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T15:14:08.921123Z","level":"info","event":"âœ… Recreated environment variable: AIRFLOW_CONN_SUPABASE_POSTGRES","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T15:14:08.921993","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-10T15:14:08.922717","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-06-10T15:14:08.923042","level":"info","event":"Connection Retrieved 'supabase_postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-10T15:14:08.923094","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-06-10T15:14:08.923473Z","level":"info","event":"ðŸ“‹ Processing articles from: artigos_filtrados_20250610_staging","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T15:14:08.923522Z","level":"info","event":"ðŸš« Excluding domains: ['.com.br', '.mx', '.ar', '.cl']","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T15:14:08.923586Z","level":"info","event":"ðŸ§ª Dry run mode: False","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T15:14:08.923638Z","level":"info","event":"âœ… PostgresHook created successfully - connection is available","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T15:14:08.923689Z","level":"info","event":"ðŸ“‹ Article append operation prepared (simulated mode)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T15:14:08.923519","level":"info","event":"Done. Returned value was: 0","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-10T15:14:08.923646","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01975a67-db63-7abb-8c7a-d632855cb396'), task_id='append_filtered_articles', dag_id='sql_queries_pipeline', run_id='manual__2025-06-10T16:14:05.221356+01:00', try_number=1, map_index=-1, hostname='aa05a188031b', context_carrier=None, task=<Task(PythonOperator): append_filtered_articles>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 10, 15, 14, 8, 800514, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
